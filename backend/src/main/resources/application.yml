# ===================================
# APPLICATION CONFIGURATION
# ===================================
spring:
  application:
    name: backend

  # ===================================
  # DATABASE CONFIGURATION
  # ===================================
  datasource:
    url: jdbc:postgresql://localhost:5432/gomoku_db
    username: gomoku_user
    password: gomoku_password
    driver-class-name: org.postgresql.Driver

  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: validate  # Use our init script, don't auto-create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: gomoku
        format_sql: true
        use_sql_comments: true

  # ===================================
  # REDIS CONFIGURATION
  # ===================================
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 60000

  # ===================================
  # KAFKA CONFIGURATION
  # ===================================
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: gomoku-app
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: com.gomokumatching.model.dto.kafka
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    # Kafka Streams configuration for event-driven matchmaking
    streams:
      application-id: matchmaking-streams
      state-dir: /tmp/kafka-streams/matchmaking
      properties:
        processing.guarantee: at_least_once
        commit.interval.ms: 1000
        num.stream.threads: 2
        cache.max.bytes.buffering: 10485760  # 10MB

# ===================================
# JWT CONFIGURATION (Development Settings)
# ===================================
# IMPORTANT: Change this secret in production!
# Generate a secure 512-bit key using: openssl rand -base64 64
app:
  jwt:
    secret: ItsASuperSecretJwtKeyThatShouldBe512BitsLongForHMACSHA512PleaseChangeThisInProduction
    expiration-ms: 86400000  # 24 hours for development
    # TODO: change to 900000 (15 min)
    # TODO: Create application-prod.yml with production-specific settings
    refresh-expiration-ms: 604800000  # 7 days

# ===================================
# AI SERVICE CONFIGURATION
# ===================================
ai:
  service:
    url: http://localhost:8000

# ===================================
# MATCHMAKING CONFIGURATION (Event-Driven with Kafka Streams)
# ===================================
# NOTE: Matchmaking is now event-driven via Kafka Streams
# No polling scheduler needed - matches created instantly when >=2 players join
matchmaking:
  queue:
    max-wait-time-seconds: 300  # 5 minutes max wait (for future timeout feature)
    estimated-match-time-seconds: 1  # Near-instant matching with event-driven approach

# ===================================
# LOGGING CONFIGURATION
# ===================================
logging:
  level:
    root: INFO
    com.gomokumatching: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'

# ===================================
# SERVER CONFIGURATION
# ===================================
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
