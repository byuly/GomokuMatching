# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL 17 Database
  postgres:
    image: postgres:17
    container_name: gomoku-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gomoku_db
      POSTGRES_USER: gomoku_user
      POSTGRES_PASSWORD: gomoku_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
      # Initialization scripts (optional)
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - gomoku-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gomoku_user -d gomoku_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin 4 for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gomoku-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gomoku.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      # Persistent pgAdmin settings
      - pgadmin_data:/var/lib/pgadmin
      # Server configuration (optional)
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - gomoku-network
    depends_on:
      postgres:
        condition: service_healthy

  # Apache Kafka (for later development)
  kafka:
    image: apache/kafka:2.8.0
    container_name: gomoku-kafka
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - gomoku-network
    profiles:
      - kafka  # Optional profile - start with: docker-compose --profile kafka up

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  kafka_data:
    driver: local

networks:
  gomoku-network:
    driver: bridge