# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL 17 Database
  postgres:
    image: postgres:17
    container_name: gomoku-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gomoku_db
      POSTGRES_USER: gomoku_user
      POSTGRES_PASSWORD: gomoku_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
      # Initialization scripts (optional)
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - gomoku-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gomoku_user -d gomoku_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin 4 for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gomoku-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gomoku.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      # Persistent pgAdmin settings
      - pgadmin_data:/var/lib/pgadmin
      # Server configuration (optional)
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - gomoku-network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching and matchmaking queue
  redis:
    image: redis:7-alpine
    container_name: gomoku-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gomoku-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: gomoku-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - gomoku-network

  # Apache Kafka for event streaming
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: gomoku-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    networks:
      - gomoku-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  gomoku-network:
    driver: bridge